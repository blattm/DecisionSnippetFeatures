[33mcommit d1856c0214ee6527bb444af42558f4b798da3759[m[33m ([m[1;36mHEAD -> [m[1;32mmaster[m[33m)[m
Author: Manuel Blatt <blatt@uni-bonn.de>
Date:   Sat Aug 22 13:08:46 2020 +0200

    added other frequent subtree threshold generator

[33mcommit a872673bbb4215764357df7167b39801fe2e7492[m[33m ([m[1;31morigin/master[m[33m, [m[1;31morigin/HEAD[m[33m)[m
Author: Manuel <manuel.blatt>
Date:   Sun Aug 9 15:56:09 2020 +0200

    fixed notebooks (%%bash)

[33mcommit d4410961d77f4fc70fec372d44b8bce10ce8aed3[m
Author: Manuel <manuel.blatt>
Date:   Sun Aug 9 15:50:14 2020 +0200

    fixed notebook 1

[33mcommit 181bc1052dd538cdcef0128690f411c78bdb8988[m
Author: Manuel <manuel.blatt>
Date:   Sun Aug 9 15:38:45 2020 +0200

    fixed a bug in notebook 0

[33mcommit 53422b77c55042d3ae6312c2c476b381e192277c[m
Author: Manuel <manuel.blatt>
Date:   Tue Jul 14 12:49:06 2020 +0200

    parallelized stuff

[33mcommit f5e97fc911a930299163cd16c24b1e2d078c9e1a[m
Author: Manuel <manuel.blatt>
Date:   Tue Jul 14 12:19:30 2020 +0200

    worked on new jupyter notepad

[33mcommit 2facada1766d2178a2d74498c25ce052a9066842[m
Author: Manuel <manuel.blatt>
Date:   Tue Jun 9 18:55:21 2020 +0200

    added multiple sigma values to notebook + simple multithreaded loop

[33mcommit d66357c207023e4a68102bfaa830357f1cbe3b37[m
Author: madams96 <markus.adams96@web.de>
Date:   Tue Jun 9 08:56:44 2020 +0200

    updated path-variables in pruning.py

[33mcommit 346627936aa3b62558e7054627a40a6f213444b7[m
Author: madams96 <markus.adams96@web.de>
Date:   Thu Jun 4 21:37:39 2020 +0200

    fixed a bug with empty lists in Min_IntSet, updated the notebook

[33mcommit 695aecd08060910162d48f92d7dcc8037c738572[m
Author: madams96 <markus.adams96@web.de>
Date:   Thu Jun 4 19:30:49 2020 +0200

    updated pruning.py and the jupyter notebook

[33mcommit fe203a8f899ab9803b5aa9f2f6d83efd7e8c0290[m
Author: madams96 <markus.adams96@web.de>
Date:   Thu Jun 4 19:01:51 2020 +0200

    updated the jupyter notebook

[33mcommit 82953d808b46fa792c40f1490a9e252e3b1ea48e[m
Author: madams96 <markus.adams96@web.de>
Date:   Thu Jun 4 18:38:24 2020 +0200

    added an entry for the forests folder to gitignore

[33mcommit fd4079fb6b7903b724606493ea2ceade86570ca0[m
Author: madams96 <markus.adams96@web.de>
Date:   Thu Jun 4 18:24:44 2020 +0200

    changed the way of saving the output file, added small description as a comment in the main function

[33mcommit e41f08835a921cb097079d34dccbb11d652ff30a[m
Author: madams96 <markus.adams96@web.de>
Date:   Thu Jun 4 18:10:39 2020 +0200

    main function now expects three arguments

[33mcommit e89f09912add501411d6c87db830456375bbc4aa[m
Author: Manuel <manuel.blatt>
Date:   Thu Jun 4 15:57:39 2020 +0200

    added dumping of adult feature vectors

[33mcommit d08650e22361b509aca00ff045f76c15da1ca1f1[m
Author: Manuel <manuel.blatt>
Date:   Thu Jun 4 15:38:36 2020 +0200

    changed gitignore

[33mcommit 480cb736888e50cb4e9150e181ab7515fe5c7f1a[m
Author: madams96 <markus.adams96@web.de>
Date:   Thu Jun 4 15:26:25 2020 +0200

    created new jupyter notebook

[33mcommit aade9c7eb393870b396964c1ae9791311a950590[m
Author: Manuel <manuel.blatt>
Date:   Thu Jun 4 15:15:34 2020 +0200

    added gitignore

[33mcommit fd63f315ab1b8fddddf205843b063e4535707716[m
Author: Manuel <manuel.blatt>
Date:   Thu Jun 4 14:49:53 2020 +0200

    copied pruning code to this repo

[33mcommit 4152222efd0b3e79e2774672b7efe99554cc38ac[m
Author: Pascal Welke <welke@uni-bonn.de>
Date:   Thu Nov 21 10:00:09 2019 +0100

    add onehot encoding to example on top of the notebook

[33mcommit fed9a26bb2d79e7ef3727557e4dc57fdb2e37c83[m
Author: Pascal Welke <welke@uni-bonn.de>
Date:   Fri Oct 18 09:19:57 2019 +0200

    add Sebastian Buschjaegers code for random forests
    
    see bitbucket.org/sbuschjaeger/arch-forest

[33mcommit ae8d3186b3219263831a9c6fd34fe02ead59d997[m
Author: Pascal Welke <welke@uni-bonn.de>
Date:   Fri Oct 18 09:12:46 2019 +0200

    new run results

[33mcommit 0a0b676f97fa9239167f6a8e2c77448be993e189[m
Author: Pascal Welke <welke@uni-bonn.de>
Date:   Fri Mar 29 12:07:51 2019 +0100

    nonoverlappingEmbeddings

[33mcommit 70d6bf03138936bf64467658e29bf4761c16087b[m
Author: Pascal Welke <welke@uni-bonn.de>
Date:   Fri Mar 29 12:07:02 2019 +0100

    some new experimentation on DT Snippets

[33mcommit 6a29c4d36722d7becf069b1c04d774b45c09de0d[m
Author: Pascal Welke <welke@uni-bonn.de>
Date:   Fri Mar 29 12:06:14 2019 +0100

    changes to PatternWeights

[33mcommit 94e6c094f10cfe08342150682e93dbcc07e17f73[m
Author: Pascal Welke <welke@uni-bonn.de>
Date:   Fri Mar 29 12:05:41 2019 +0100

    fix missing member problem

[33mcommit e4dd645874fb5e681da2f8e2fc6959b760ac7644[m
Author: Pascal Welke <welke@uni-bonn.de>
Date:   Fri Mar 29 12:02:36 2019 +0100

    add (new?) changes after syncing conflict with sciebo

[33mcommit 13c500503d7ea4979a211dc81bbc80713cba6ae1[m
Author: Pascal Welke <welke@uni-bonn.de>
Date:   Wed Jan 30 14:07:25 2019 +0100

    rename notebooks to show their order

[33mcommit 8a6c188c25fa28779912494189fc948bc8ae836d[m
Author: Pascal Welke <welke@uni-bonn.de>
Date:   Wed Jan 30 10:55:44 2019 +0100

    Split the "Preprocessing and Initial Mining" notebook in two.
    
    Add some additional documentation, as well

[33mcommit 93ab44beef9affdbc39105991fc043fd5a98553a[m
Author: Pascal Welke <welke@uni-bonn.de>
Date:   Wed Jan 30 10:21:16 2019 +0100

    Remove obsolete protoyping notebook
    
    Results of this notebook are included in SubtreeSelection/findEmbeddings.py

[33mcommit c5389647c7ed3b7fafbd431cbed14278012889bc[m
Author: Pascal Welke <welke@uni-bonn.de>
Date:   Wed Jan 30 10:12:24 2019 +0100

    Remove obsolete protoyping notebook
    
    Results of this notebook are included in the converters json2graph*.py

[33mcommit 9c357d78eeacc06224f067d7587c186b51746cf1[m
Author: Pascal Welke <welke@uni-bonn.de>
Date:   Tue Jan 29 18:55:32 2019 +0100

    Documentation of the classes and functions of the Random Forest Subtree Selection

[33mcommit fd34123683cbe577d4e088b0360c33ba14806fbb[m
Author: Pascal Welke <welke@uni-bonn.de>
Date:   Tue Jan 29 18:26:20 2019 +0100

    rename Class

[33mcommit 661990ff79271d6bd8d1d68da2d6076dee46ce2e[m
Author: Pascal Welke <welke@uni-bonn.de>
Date:   Tue Jan 29 18:21:05 2019 +0100

    novel class that allows Pattern Weight analysis with integrated pattern mining

[33mcommit 613ec2bc6601a44a3a73df0840aaa9c1477e5f5c[m
Author: Pascal Welke <welke@uni-bonn.de>
Date:   Tue Jan 29 18:19:52 2019 +0100

    __init__.py to make code in SubtreeSelection importable as module

[33mcommit 2bd64f85049209600ed481804dc6f8b4879a95d8[m
Author: Pascal Welke <welke@uni-bonn.de>
Date:   Tue Jan 29 18:18:21 2019 +0100

    moved cString2json -> SubtreeSelection, change calls in notebook

[33mcommit 7c212b9c88c550eeb01aae630e758a6d65da2fe7[m
Author: Pascal Welke <welke@uni-bonn.de>
Date:   Tue Jan 29 18:17:03 2019 +0100

    new version of lwgr that allows to redirect feature stream to named file

[33mcommit 8b86d30de4a1a9cb7eba610481b5edd7f0d355bd[m
Author: Pascal Welke <welke@uni-bonn.de>
Date:   Tue Jan 29 13:50:16 2019 +0100

    add new constructor for PatternStatistics class that finds the pattern embeddings by itself
    
    now, for a set of (frequent) patterns and a transaction database, both
    in json format, we can do statistics directly. Before this commit, we
    would need to use findEmbeddings.py to create a file where the
    transactions are annotated with the embedding information.

[33mcommit a8362ca296903015d7d92d0808407c00934ad35a[m
Author: Pascal Welke <welke@uni-bonn.de>
Date:   Tue Jan 29 13:46:39 2019 +0100

    move findEmbeddings.py and refactor functions for use in PatternWeights

[33mcommit 9cd27c17d6004455629d9963de4dde347b37633a[m
Author: Pascal Welke <welke@uni-bonn.de>
Date:   Tue Jan 29 11:18:46 2019 +0100

    some additional experiments and progress

[33mcommit a2ee8000314f274091c1ddef883a448037e25d3b[m
Author: Pascal Welke <welke@uni-bonn.de>
Date:   Tue Jan 29 11:14:30 2019 +0100

    refactor the code used for Frequent pattern weighting in a notebook into a module
    
    - however, there seems to be a bug in the counting or in the finding of the embeddings

[33mcommit e34fb304927f815dc159fba71ba2b693ba040650[m
Author: Pascal Welke <welke@uni-bonn.de>
Date:   Mon Jan 28 17:54:56 2019 +0100

    Documentation of the classes and functions of the Random Forest Feature Extractor

[33mcommit a864e109d4769c520bed248016c9668476a1f308[m
Author: Pascal Welke <welke@uni-bonn.de>
Date:   Tue Jan 15 19:11:58 2019 +0100

    some documentation

[33mcommit 9520b554b054605cf175ea3bfb0d5027520103ac[m
Author: Pascal Welke <welke@uni-bonn.de>
Date:   Tue Jan 15 19:07:18 2019 +0100

    removal of my own OneHotFrequentSubtreeFeatures classes.
    
    It is interesting to note that the sklearn LinearRegression algorithm
    is faster *and produces less error* when applied to the sparse OneHot
    features produced by the sklearn class applied to the data generated
    by my FeatureGeneratingTree class compared to the same alg applied to
    dense dataset produced by my OneHotFeatureGeneratingTree class.
    
    This is the case, although the data matrices contain identical data.

[33mcommit bbaf797a1ae4588f246948a544450124ed0a3171[m
Author: Pascal Welke <welke@uni-bonn.de>
Date:   Tue Jan 15 19:01:35 2019 +0100

    experimenting with different variants of the Feature Generators.
    
    It turns  out that my homegrown OneHotEncoding is not as fast as a
    variant that uses the OneHotEncoding  class of sklearn. Hence, in the
    next commit, we will lose the class OneHotFrequentSubtreeFeatures and
    all references of it and shall never speak of it again

[33mcommit 8d6c43dc1268ae6146633587a92d8248967a36dd[m
Author: Pascal Welke <welke@uni-bonn.de>
Date:   Tue Jan 15 18:59:51 2019 +0100

    add functions to transform my 'partial binary decision trees' into proper decision trees and improve speed of transformation

[33mcommit d41d28be2a2d26327b444acab18a1abe2f8b17ea[m
Author: Pascal Welke <welke@uni-bonn.de>
Date:   Fri Jan 11 12:20:47 2019 +0100

    plotting of results and interpretation of those for frequent trees with split values
    
    - in the course of this: update the code for plotting frequent trees
    of a fixed size

[33mcommit d6ea7ef22f1c2d5649a1a1a7110fdc7b9b09acb1[m
Author: Pascal Welke <welke@uni-bonn.de>
Date:   Fri Jan 11 11:00:00 2019 +0100

    Plot and (briefly) analyze the results for the frequent trees with split values in the labels.

[33mcommit 267dfa0ab9168004fe59a081383d0beb9fba1d66[m
Author: Pascal Welke <welke@uni-bonn.de>
Date:   Fri Jan 11 10:57:54 2019 +0100

    find all occurrrences of frequent patterns of up to six vertices also for the variants with split values in the labels
    
    This notebook now contains the code to find embeddings for all variants.
    Prior to this commit, it only computed the embeddings for all patterns
    in the case where the label of vertices in the forest database consisted
    of the split feature, without the split value.

[33mcommit 06c28fb98604eb187fc59776906717d4f9189461[m
Author: Pascal Welke <welke@uni-bonn.de>
Date:   Fri Jan 11 10:54:42 2019 +0100

    finished running the mining notebook
    
    - additional log output
    - reference to the notebook where the next steps are taken

[33mcommit f1036fc6fdffb4bea69b685a077898eb0d13925b[m
Author: Pascal Welke <welke@uni-bonn.de>
Date:   Mon Jan 7 15:28:43 2019 +0100

    make cString2json work with the new features with split values

[33mcommit f7a81df36522af5bdf38fff20d5b7f810c9b2fe6[m
Author: Pascal Welke <welke@uni-bonn.de>
Date:   Fri Dec 21 18:59:31 2018 +0100

    mining of frequent patterns with features and split values in the vertex labels

[33mcommit a717e793f5e4ffbf5bdebc23a3ac9c82b13d470f[m
Author: Pascal Welke <welke@uni-bonn.de>
Date:   Fri Dec 21 18:58:45 2018 +0100

    some continued work on the pattern weighting front

[33mcommit 379ace77e14bf73f2790c8cad5e1b5c3fe704410[m
Author: Pascal Welke <welke@uni-bonn.de>
Date:   Fri Dec 21 18:58:09 2018 +0100

    update notebook to show off what we want to do

[33mcommit 4ddeb32e687490d7f17a044a07159c0a19b686b1[m
Author: Pascal Welke <welke@uni-bonn.de>
Date:   Fri Dec 21 18:01:10 2018 +0100

    new format converters that maintain split values

[33mcommit df4464edb8ae878a7d5a7c55c58c7305c365f888[m
Author: Pascal Welke <welke@uni-bonn.de>
Date:   Fri Dec 21 17:29:30 2018 +0100

    here is the same idea implemented in a nice python module for easy import and use

[33mcommit 3035089fc923bff811f49a4f76db6450e26c8246[m
Author: Pascal Welke <welke@uni-bonn.de>
Date:   Fri Dec 21 17:27:34 2018 +0100

    new idea on feature generation given decision tree snippets.
    
    here are four classes implementing a decision tree snippet and
    corresponding feature generators / data transformators in a
    notebook

[33mcommit 1b01b1122be603b8c0ccb81abde3ae3d40e7a530[m
Author: Pascal Welke <welke@uni-bonn.de>
Date:   Tue Dec 18 17:44:35 2018 +0100

    more info on high weight patterns

[33mcommit 0c37fbd9f96e9e8959d72f7dd9e42d182950585f[m
Author: Pascal Welke <welke@uni-bonn.de>
Date:   Tue Dec 18 15:47:40 2018 +0100

    update computation of pattern embeddings. should now be computed correctly for all datasets

[33mcommit 75f5252076f505f07c05348d6317fdadf0df2a6c[m
Author: Pascal Welke <welke@uni-bonn.de>
Date:   Mon Dec 17 17:29:15 2018 +0100

    a notebook to compute the hottest candidate patterns for replacement by a function

[33mcommit bab66af6ba53317307d7c11524c89bdbfa08d544[m
Author: Pascal Welke <welke@uni-bonn.de>
Date:   Mon Dec 17 17:28:20 2018 +0100

    find all embeddings of all frequent patterns in all RFs

[33mcommit 30ddd13ab79e5b36d76ab9729ad2366609873e24[m
Author: Pascal Welke <welke@uni-bonn.de>
Date:   Mon Dec 17 17:27:35 2018 +0100

    cstring executable that can convert from cstring format to graph format and back

[33mcommit 91825ef09098652fa86873c85d16f9b873b64639[m
Author: Pascal Welke <welke@uni-bonn.de>
Date:   Mon Dec 17 15:37:32 2018 +0100

    remove debug print statement

[33mcommit a25a5b021485b0c58bf1d699dbc40a5f59c3aab7[m
Author: Pascal Welke <welke@uni-bonn.de>
Date:   Fri Dec 14 16:30:58 2018 +0100

    finish prototyping for subgraph isomorphism enumeration

[33mcommit b194cc92bc74f9f361ef10df01f8f9506e10f37a[m
Author: Pascal Welke <welke@uni-bonn.de>
Date:   Fri Dec 14 16:30:23 2018 +0100

    unify whitespace

[33mcommit efe6a472a1374ad8f9338af715154b699dad0b46[m
Author: Pascal Welke <welke@uni-bonn.de>
Date:   Fri Dec 14 16:20:02 2018 +0100

    script to find and output all the embeddings / subgraph isomorphisms
    for a given set of rooted tree patterns

[33mcommit fe3ae609b5394ebbc8dab236b3ba54d87dccce19[m
Author: Pascal Welke <welke@uni-bonn.de>
Date:   Fri Dec 14 11:43:44 2018 +0100

    add some todos

[33mcommit 5cbc93fe6d56e3244a84f36ea283937555177ee3[m
Author: Pascal Welke <welke@uni-bonn.de>
Date:   Fri Dec 14 11:16:31 2018 +0100

    script to convert from pascals pattern format to json

[33mcommit 023d728726ea06c476b9929668b412509c46134c[m
Author: Pascal Welke <welke@uni-bonn.de>
Date:   Fri Dec 7 17:10:01 2018 +0100

    code up an algorithm to compute all embeddings (i.e., rooted labeled subgraph isomorphisms) from some patterns to some transaction graphs

[33mcommit ba0585a12a72fefe8b0396b97604dea20b54825c[m
Author: Pascal Welke <welke@uni-bonn.de>
Date:   Thu Nov 22 11:34:14 2018 +0100

    Result plotting and Preliminary interpretation of the rooted freq. subtrees

[33mcommit a342d0e945e87d95702058a060bc42f194fc0be3[m
Author: Pascal Welke <welke@uni-bonn.de>
Date:   Thu Nov 22 11:33:43 2018 +0100

    add reference to results notebook

[33mcommit 3a1dc2f5bb04832cf826d58850f533dadec634d4[m
Author: Pascal Welke <welke@uni-bonn.de>
Date:   Thu Nov 22 11:32:55 2018 +0100

    fix reference to other notebook

[33mcommit 3f3308605477b8e563a9f682e22b9ce9e730d5e0[m
Author: Pascal Welke <welke@uni-bonn.de>
Date:   Wed Nov 21 14:43:29 2018 +0100

    initial experiments with rooted tree mining algorithm

[33mcommit 93addecde50a9510cde8f260bc183eaeeabcc591[m
Author: Pascal Welke <welke@uni-bonn.de>
Date:   Tue Nov 20 17:41:01 2018 +0100

    graph mining executable

[33mcommit f10068d6e3d973a41708f9094258942de0c69538[m
Author: Pascal Welke <welke@uni-bonn.de>
Date:   Tue Nov 20 14:50:03 2018 +0100

    add required import

[33mcommit cb18223418a5d9a7bd8ff40ce71a5a549bf8eb8b[m
Author: Pascal Welke <welke@uni-bonn.de>
Date:   Tue Nov 20 12:05:24 2018 +0100

    Initial Experiment Evaluation and Interpretation for Undirected Graphs

[33mcommit 9cb87012d299fec21c2b81449ca761090126f8e8[m
Author: Pascal Welke <welke@uni-bonn.de>
Date:   Tue Nov 20 11:04:18 2018 +0100

    Initial Experiments with Undirected Graphs are finished.
    
    Data Conversion and Initial Undirected Frequent Subtree Mining.ipynb
    contains source, documentation and some output for the preliminary
    mining step of finding frequent undirected graphs in the random forests.

[33mcommit 170108a9553e3feb5b1acec0ef43657a7e5e255f[m
Author: Pascal Welke <welke@uni-bonn.de>
Date:   Tue Nov 20 10:55:28 2018 +0100

    not important
    
    some version update

[33mcommit ef1c00dc4509d7585995d243f355e3b0f1727bb8[m
Author: Pascal Welke <welke@uni-bonn.de>
Date:   Wed Nov 14 17:10:03 2018 +0100

    experimentation bash notebook

[33mcommit e355dd44dce139dff85449b294ca64d7f0ccc692[m
Author: Pascal Welke <welke@uni-bonn.de>
Date:   Wed Nov 14 17:09:46 2018 +0100

    update documentation of parsers

[33mcommit 6de3570914aac1dae2fba6e4b6cb06daae0ef093[m
Author: Pascal Welke <welke@uni-bonn.de>
Date:   Wed Nov 14 16:19:52 2018 +0100

    ipy notebook containing some ideas and prototyping for the parsers

[33mcommit 8ac9410860088230ff540141e184126db6d32dd4[m
Author: Pascal Welke <welke@uni-bonn.de>
Date:   Wed Nov 14 16:11:29 2018 +0100

    converter scripts from json to Pascals graph database format
